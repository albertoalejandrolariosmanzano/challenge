name: CI-CD
on:
  push:
    branches: [ api ]
  pull_request:
    branches: [ api ]

jobs:

  build:
    name: building
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [10.x, 12.x, 14.x]
      fail-fast: true
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Install
        uses: actions/setup-node@v1
        with:
          node_version: ${{ matrix.node_version }}

      # - name: Run installation
      #   uses: smraalm/api@v1.0
        run: |
          yarn install --production
          cp .env.example .env

  #     - name: Checkout
  #       uses: actions/checkout@v2
      
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}
      
  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1
      
  #     - name: Build, tag, and push image to Amazon ECR
  #       id: build-image
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         ECR_REPOSITORY: ${{ github.repository }}
  #         IMAGE_TAG: ${{ github.sha }}
  #       run: |
  #         # Build a docker container and push it to ECR so that it can be deployed to ECS.
  #         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
  
  # deploy:
  #   name: deploy to cluster
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: deploy to cluster
  #     uses: steebchen/kubectl@v2.0.0
  #     with: # defaults to latest kubectl binary version
  #       config: ${{ secrets.KUBE_CONFIG_DATA }}
  #       command: set image --record deployment/my-app api=${{ github.repository }}:${{ github.sha }}
  #   - name: verify deployment
  #     uses: steebchen/kubectl@v2.0.0
  #     with:
  #       config: ${{ secrets.KUBE_CONFIG_DATA }}
  #       version: v1.21.0 # specify kubectl binary version explicitly
  #       command: rollout status deployment/my-app