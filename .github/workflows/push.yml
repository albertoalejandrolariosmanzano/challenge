name: CI-CD
on:
  push:
    branches: [ api ]
  pull_request:
    branches: [ api ]

jobs:
  # install:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: smraalm/node:1.0
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Copy env file
  #       run: cp .env.example .env
  #     - name: Install dependencies
  #       run: |
  #         npm install --save-dev sequelize-cli
  #         yarn install --production
  #       # npx sequelize-cli db:migrate

  build:
    # needs: install
    runs-on: ubuntu-latest
    container:
      image: smraalm/kubetools:1.1
    steps:
      - uses: actions/checkout@v2
      - name: Building backend API
        env:
          AWS_CONTAINER_REGISTRY: ${{ secrets.AWS_CLIENT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          APP_NAME: api-staging
        run: |
          docker build -t $AWS_CONTAINER_REGISTRY/$APP_NAME:${{ github.sha }} .
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $AWS_CONTAINER_REGISTRY
          docker push $AWS_CONTAINER_REGISTRY/$APP_NAME:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: smraalm/kubetools:1.1
    steps:
      - uses: actions/checkout@v2
      - name: Deploy backend API
        env:
          AWS_CONTAINER_REGISTRY: ${{ secrets.AWS_CLIENT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          APP_NAME: api-staging
          PATHS: api
          IMG_PATH: $PATHS.image
          RESOURCES: resources
          HOST: $PATHS.ingress
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $AWS_CONTAINER_REGISTRY
          aws eks update-kubeconfig --name ${{ secrets.AWS_CLUSTER_ID }}
          helm repo add api $HELM_REPO
          helm repo update
          helm install api api/api \
            --set $IMG_PATH.repository=$AWS_CONTAINER_REGISTRY/$APP_NAME \
            --set $IMG_PATH.tag=${{ github.sha }} \
            -n staging
        # helm upgrade api api/api \
        #   --set replicaCount=$REPLICA \
        #   --set $IMG_PATH.repository=$AWS_CONTAINER_REGISTRY/$APP_NAME-2 \
        #   --set $IMG_PATH.tag=$CI_COMMIT_SHA \
        #   --set $HOST.hosts.host=$SITE_URI \
        #   # --set $PATHS.$RESOURCES.requests.cpu=$CPU_R \
        #   # --set $PATHS.$RESOURCES.requests.memory=$RAM_R \
        #   # --set $PATHS.$RESOURCES.limits.cpu=$CPU_L \
        #   # --set $PATHS.$RESOURCES.limits.memory=$RAM_L \
        #   -n staging